/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: glenatron (https://sketchfab.com/glenatron)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/egg-danny-devit-yolk-f3364d0c6e374edd96dfcfec6b321024
title: Egg! Danny Devit-yolk
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { Group, Mesh } from 'three';
import { useFrame } from '@react-three/fiber';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';

interface GLTFResult extends GLTF {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial;
  };
}

export function EggModel() {
  const ref = useRef<Group>(null!);
  useFrame((root, delta) => {
    ref.current.rotation.y += Math.cos(delta * 0.05) * 0.01;
  });
  const { nodes, materials } = useGLTF(
    '/egg_danny_devit-yolk.glb'
  ) as GLTFResult;
  return (
    <group dispose={null} scale={8} ref={ref} rotation={[0, 4.5, 0]}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials['Scene_-_Root']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials['Scene_-_Root']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials['Scene_-_Root']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials['Scene_-_Root']}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/egg_danny_devit-yolk.glb');
